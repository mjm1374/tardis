{"version":3,"sources":["index.js"],"names":["tardis","theTime","pattern","patterns","keys","days","months","a","b","convertTime","checkUnixTime","isNaN","date","Date","dateObj","year","getYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","slice","sec","getSeconds","fullYear","getFullYear","shortYear","toString","substr","wordYear","inWords","trim","fullMonth","shortMonth","fullDay","getDay","shortDay","wordHour","wordMin","wordSec","yearInt","monthInt","dayInt","hourInt","minInt","secInt","YYear","MMonth","DDay","HHour","MMin","SSec","TT","tt","utc","timestamp","undefined","Math","floor","now","checkedTime","parse","split","map","join","num","length","n","match","str","Number","replaceAll","replaceWhat","replaceTo","replace","re","RegExp","workTweleve","theHour","hours","dateparts","replacement","_createClass","key","arguments","val","_classCallCheck","patterned","thisDate","replaceStr","replaceMap","forEach","index","thisEdit","eval","push","i","rpl","time","ISO","formattedDate","_typeof","_readOnlyError","ShortDate","LongDate","MonthDate","MonthDateTime","MonthDateTime12","DayMonthDate","Year","Month","Day","TimeOfDay","TimeOfDay12","doctorwho","console","log","quotes","random"],"mappings":"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","file":"../tardis.js","sourcesContent":["/* \nTardis - a module for dates and time formating and converting.\nversion: v1.6.0\nUpdated: June 15, 2024\nAuthor: Mike McAllister\nEmail: mike@logikbox.com\nSite: https://logikbox.com\nDate: June 28, 2019\nDocs: https: //docs.google.com/spreadsheets/d/1SVNrBFcKqkojN59xQNyeA3mvNxvX8pwgXzKj9JABAtw/edit?usp=sharing\n\n\nusage: include the file in your build.  \npublic methods:\n    taris.dateparts({date}); -- simple date part object\n    taris.MonthDateTime({date}); -- preformatted displays\n    taris.DayMonthDate({date}); -- preformatted displays\n*/\n\n/*jshint esversion: 6 */\nconst tardis = (function (theTime, pattern) {\n\t// Keep this variables private inside this closure scope\n\n\t// Patterns and Keys must stay in sync value and size wise,\n\tconst patterns = [\n\t\t'YYYY',\n\t\t'YYY',\n\t\t'YY',\n\t\t'y',\n\t\t'MMMM',\n\t\t'MMM',\n\t\t'MM',\n\t\t'M',\n\t\t'm',\n\t\t'DDDD',\n\t\t'DDD',\n\t\t'DD',\n\t\t'D',\n\t\t'd',\n\t\t'HHHH',\n\t\t'HH',\n\t\t'H',\n\t\t'h',\n\t\t'IIII',\n\t\t'II',\n\t\t'I',\n\t\t'i',\n\t\t'SSSS',\n\t\t'SS',\n\t\t'S',\n\t\t's',\n\t\t'TT',\n\t\t'tt',\n\t];\n\tconst keys = [\n\t\t'fullYear',\n\t\t'wordYear',\n\t\t'YYear',\n\t\t'year',\n\t\t'fullMonth',\n\t\t'shortMonth',\n\t\t'MMonth',\n\t\t'month',\n\t\t'monthInt',\n\t\t'fullDay',\n\t\t'shortDay',\n\t\t'DDay',\n\t\t'day',\n\t\t'dayInt',\n\t\t'wordHour',\n\t\t'HHour',\n\t\t'hour',\n\t\t'hourInt',\n\t\t'wordMin',\n\t\t'MMin',\n\t\t'min',\n\t\t'minInt',\n\t\t'wordSec',\n\t\t'SSec',\n\t\t'sec',\n\t\t'secInt',\n\t\t'TT',\n\t\t'tt',\n\t];\n\tconst days = [\n\t\t'Sunday',\n\t\t'Monday',\n\t\t'Tuesday',\n\t\t'Wednesday',\n\t\t'Thursday',\n\t\t'Friday',\n\t\t'Saturday',\n\t];\n\tconst months = [\n\t\t'January',\n\t\t'Febuary',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December',\n\t];\n\tconst a = [\n\t\t'',\n\t\t'one ',\n\t\t'two ',\n\t\t'three ',\n\t\t'four ',\n\t\t'five ',\n\t\t'six ',\n\t\t'seven ',\n\t\t'eight ',\n\t\t'nine ',\n\t\t'ten ',\n\t\t'eleven ',\n\t\t'twelve ',\n\t\t'thirteen ',\n\t\t'fourteen ',\n\t\t'fifteen ',\n\t\t'sixteen ',\n\t\t'seventeen ',\n\t\t'eighteen ',\n\t\t'nineteen ',\n\t];\n\tconst b = [\n\t\t'',\n\t\t'',\n\t\t'twenty',\n\t\t'thirty',\n\t\t'forty',\n\t\t'fifty',\n\t\t'sixty',\n\t\t'seventy',\n\t\t'eighty',\n\t\t'ninety',\n\t];\n\n\t// Private Methods ----------------------------------------------------------------------------------------------- //\n\n\tconst convertTime = (theTime) => {\n\t\ttheTime = checkUnixTime(theTime);\n\n\t\tif (isNaN(theTime)) {\n\t\t\treturn 'ERROR: Invalid time format: ' + theTime;\n\t\t} else {\n\t\t\tlet date = new Date(theTime * 1000);\n\t\t\tlet dateObj = {\n\t\t\t\tyear: date.getYear(),\n\t\t\t\tmonth: date.getMonth() + 1,\n\t\t\t\tday: date.getDate(),\n\t\t\t\thour: date.getHours(),\n\t\t\t\tmin: ('0' + date.getMinutes()).slice(-2),\n\t\t\t\tsec: ('0' + date.getSeconds()).slice(-2),\n\n\t\t\t\tfullYear: date.getFullYear(),\n\t\t\t\tshortYear: date.getYear().toString().substr(-2),\n\t\t\t\twordYear: inWords(date.getFullYear()).trim(),\n\t\t\t\tfullMonth: months[date.getMonth()],\n\t\t\t\tshortMonth: months[date.getMonth()].substr(0, 3),\n\t\t\t\tfullDay: days[date.getDay()],\n\t\t\t\tshortDay: days[date.getDay()].substr(0, 3),\n\t\t\t\twordHour: inWords(date.getHours()).trim(),\n\t\t\t\twordMin: inWords(date.getMinutes()).trim(),\n\t\t\t\twordSec: inWords(date.getSeconds()).trim(),\n\n\t\t\t\tyearInt: date.getYear(),\n\t\t\t\tmonthInt: date.getMonth(),\n\t\t\t\tdayInt: date.getDay(),\n\t\t\t\thourInt: date.getHours(),\n\t\t\t\tminInt: date.getMinutes(),\n\t\t\t\tsecInt: date.getSeconds(),\n\n\t\t\t\tYYear: date.getYear().toString().substr(-2),\n\t\t\t\tMMonth: ('0' + (date.getMonth() + 1)).slice(-2),\n\t\t\t\tDDay: ('0' + (date.getDate() + 1)).slice(-2),\n\t\t\t\tHHour: ('0' + date.getHours()).slice(-2),\n\t\t\t\tMMin: ('0' + date.getMinutes()).slice(-2),\n\t\t\t\tSSec: ('0' + date.getSeconds()).slice(-2),\n\t\t\t\tTT: null,\n\t\t\t\ttt: null,\n\n\t\t\t\tutc: date,\n\t\t\t\ttimestamp: theTime,\n\t\t\t};\n\n\t\t\tdateObj.TT = date.hour < 11 ? 'AM' : 'PM';\n\t\t\tdateObj.tt = date.hour < 11 ? 'am' : 'pm';\n\n\t\t\treturn dateObj;\n\t\t}\n\t};\n\n\tconst checkUnixTime = (theTime) => {\n\t\tif (theTime == '' || theTime == undefined)\n\t\t\ttheTime = Math.floor(Date.now() / 1000);\n\t\tlet checkedTime = theTime;\n\n\t\tif (!isNaN(Date.parse(checkedTime))) {\n\t\t\tcheckedTime = checkedTime\n\t\t\t\t.split(' - ')\n\t\t\t\t.map(function (date) {\n\t\t\t\t\treturn Date.parse(date + '-0500') / 1000;\n\t\t\t\t})\n\t\t\t\t.join(' - ');\n\t\t}\n\n\t\treturn checkedTime;\n\t};\n\n\t// https://github.com/salmanm/num-words\n\tconst inWords = (num) => {\n\t\tif ((num = num.toString()).length > 9) return 'overflow';\n\t\tlet n = ('000000000' + num)\n\t\t\t.substr(-9)\n\t\t\t.match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n\t\tif (!n) return;\n\t\tlet str = '';\n\t\tstr +=\n\t\t\tn[1] != 0\n\t\t\t\t? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore '\n\t\t\t\t: '';\n\t\tstr +=\n\t\t\tn[2] != 0\n\t\t\t\t? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh '\n\t\t\t\t: '';\n\t\tstr +=\n\t\t\tn[3] != 0\n\t\t\t\t? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) +\n\t\t\t\t  'thousand '\n\t\t\t\t: '';\n\t\tstr +=\n\t\t\tn[4] != 0\n\t\t\t\t? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) +\n\t\t\t\t  'hundred '\n\t\t\t\t: '';\n\t\tstr +=\n\t\t\tn[5] != 0\n\t\t\t\t? (str != '' ? 'and ' : '') +\n\t\t\t\t  (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]])\n\t\t\t\t: '';\n\t\treturn str;\n\t};\n\n\tconst replaceAll = (str, replaceWhat, replaceTo) => {\n\t\treplaceWhat = replaceWhat.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\tlet re = new RegExp(replaceWhat, 'g');\n\t\treturn str.replace(re, replaceTo);\n\t};\n\n\tconst workTweleve = (theHour) => {\n\t\tlet hours = theHour;\n\t\tif (hours > 12) {\n\t\t\thours = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours = '12';\n\t\t}\n\n\t\treturn hours;\n\t};\n\n\t// Public Methods ----------------------------------------------------------------------------------------------- //\n\n\tconst dateparts = (theTime) => {\n\t\treturn convertTime(theTime);\n\t};\n\n\tclass replacement {\n\t\tconstructor(key = '', val = '') {\n\t\t\tthis.key = key;\n\t\t\tthis.val = val;\n\t\t}\n\t}\n\n\t// Freeform patterns\n\tconst patterned = (theTime, pattern) => {\n\t\tlet thisDate = convertTime(theTime);\n\t\tlet replaceStr = '';\n\t\tlet replaceMap = [];\n\n\t\tpatterns.forEach(function (val, index) {\n\t\t\tlet thisEdit = '';\n\t\t\treplaceStr = '{{' + index + '}}';\n\t\t\tthisEdit = new replacement(\n\t\t\t\treplaceStr,\n\t\t\t\teval('thisDate.' + keys[index])\n\t\t\t);\n\t\t\treplaceMap.push(thisEdit);\n\t\t\tpattern = replaceAll(pattern, val, replaceStr);\n\t\t});\n\n\t\tfor (let i = 0; i < replaceMap.length; i++) {\n\t\t\tlet rpl = replaceMap[i];\n\t\t\tpattern = replaceAll(pattern, rpl.key, rpl.val);\n\t\t}\n\n\t\treturn {\n\t\t\tpattern: pattern,\n\t\t\ttime: theTime,\n\t\t};\n\t};\n\n\t// Preset patterns\n\tconst ISO = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.fullYear + '-' + thisDate.MMonth + '-' + thisDate.day;\n\t\t}\n\t\treturn formattedDate;\n\t};\n\n\tconst ShortDate = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.MMonth + '/' + thisDate.day + '/' + thisDate.fullYear;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst LongDate = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.shortMonth +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.day +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.fullYear;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst MonthDate = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.fullMonth +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.day +\n\t\t\t\t', ' +\n\t\t\t\tthisDate.fullYear;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst MonthDateTime = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.fullMonth +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.day +\n\t\t\t\t', ' +\n\t\t\t\tthisDate.fullYear +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.hour +\n\t\t\t\t':' +\n\t\t\t\tthisDate.min;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst MonthDateTime12 = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.fullMonth +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.day +\n\t\t\t\t', ' +\n\t\t\t\tthisDate.fullYear +\n\t\t\t\t' ' +\n\t\t\t\tworkTweleve(thisDate.hour) +\n\t\t\t\t':' +\n\t\t\t\tthisDate.min +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.TT;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst DayMonthDate = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.fullDay +\n\t\t\t\t', ' +\n\t\t\t\tthisDate.fullMonth +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.day +\n\t\t\t\t', ' +\n\t\t\t\tthisDate.fullYear;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst Year = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate = thisDate.fullYear;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst Month = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate = thisDate.fullMonth;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst Day = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate = thisDate.fullDay;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst TimeOfDay = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tthisDate.hour + ':' + thisDate.min + ':' + thisDate.SSec;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\tconst TimeOfDay12 = (theTime) => {\n\t\tconst thisDate = convertTime(theTime);\n\t\tconst formattedDate = thisDate;\n\t\tif (typeof thisDate == 'object') {\n\t\t\tformattedDate =\n\t\t\t\tworkTweleve(thisDate.hour) +\n\t\t\t\t':' +\n\t\t\t\tthisDate.min +\n\t\t\t\t':' +\n\t\t\t\tthisDate.SSec +\n\t\t\t\t' ' +\n\t\t\t\tthisDate.TT;\n\t\t}\n\n\t\treturn formattedDate;\n\t};\n\n\t// Nerd stuff\n\tconst doctorwho = () => {\n\t\tconsole.log('Spoilers!');\n\t\tconst quotes = [\n\t\t\t'Bowties are cool.',\n\t\t\t'Rule 1, the Doctor lies.',\n\t\t\t'I’m a mad man with a box.',\n\t\t\t'Run!',\n\t\t\t'and Don’t Blink!',\n\t\t\t'Fezzes are cool.',\n\t\t\t'Never cruel or cowardly. Never give up, never give in.',\n\t\t\t'Do what I do. Hold tight and pretend it’s a plan!',\n\t\t\t'Rest is for the weary, sleep is for the dead',\n\t\t\t'We’re all stories, in the end. Just make it a good one, eh?',\n\t\t\t'Good men don’t need rules',\n\t\t\t'Never run when you’re scared.',\n\t\t\t'What’s the point in two hearts if you can’t be a bit forgiving now and then?',\n\t\t\t'There’s no point in being grown up if you can’t be childish sometimes.',\n\t\t\t'You want weapons? We’re in a library! Books! The best weapons in the world!',\n\t\t\t'A straight line may be the shortest distance between two points, but it is by no means the most interesting',\n\t\t\t'Come on, Rory! It isn’t rocket science, it’s just quantum physics!',\n\t\t\t'Big flashy things have my name written all over them. Well… not yet, give me time and a crayon.',\n\t\t\t'In 900 years of time and space, I’ve never met anyone who wasn’t important',\n\t\t\t'Almost every species in the universe has an irrational fear of the dark. But they’re wrong. ‘Cause it’s not irrational.',\n\t\t\t'Biting’s excellent. It’s like kissing – only there is a winner.',\n\t\t\t'Never be certain of anything. It’s a sign of weakness.',\n\t\t\t'Spoilers!',\n\t\t\t'Geronimo',\n\t\t\t'Hello Sweetie',\n\t\t\t'Allons-y',\n\t\t];\n\n\t\treturn quotes[Math.floor(Math.random() * quotes.length)];\n\t};\n\n\treturn {\n\t\tdateparts: dateparts,\n\t\tpatterned: patterned,\n\t\tISO: ISO,\n\t\tShortDate: ShortDate,\n\t\tLongDate: LongDate,\n\t\tMonthDate: MonthDate,\n\t\tMonthDateTime: MonthDateTime,\n\t\tMonthDateTime12: MonthDateTime12,\n\t\tDayMonthDate: DayMonthDate,\n\t\tYear: Year,\n\t\tMonth: Month,\n\t\tDay: Day,\n\t\tTimeOfDay: TimeOfDay,\n\t\tTimeOfDay12: TimeOfDay12,\n\t\tdoctorwho: doctorwho,\n\t};\n})();\n\n// Output Tests\n\n// console.log(tardis.dateparts());\n// console.log(tardis.dateparts('apple sauce'));\n// console.log(tardis.patterned(1133481000, 'M/DD/YYYY - H:I:SS TT tt'));\n// console.log(tardis.patterned('2019-06-29T17:26:43', 'M/DD/YYYY - HH:II:SS tt'));\n// console.log(tardis.patterned('', 'MMMM DDDD, YYY'));\n// console.log(tardis.patterned('', 'MMMM MMM , MM M m'));\n// console.log(tardis.patterned('', 'DDDD DDD DD, D d'));\n// console.log(tardis.TimeOfDay());\n// console.log(tardis.TimeOfDay12());\n// console.log(tardis.Month());\n// console.log(tardis.Day());\n// console.log('-------------------------------------');\n// console.log(tardis.dateparts(1133481000));\n// console.log(tardis.DayMonthDate(1133481000));\n// console.log(tardis.MonthDateTime(1133481000));\n// console.log(tardis.MonthDateTime12(1133481000));\n// console.log(tardis.MonthDate(1133481000));\n// console.log(tardis.MonthDate('apple sauce'));\n"]}